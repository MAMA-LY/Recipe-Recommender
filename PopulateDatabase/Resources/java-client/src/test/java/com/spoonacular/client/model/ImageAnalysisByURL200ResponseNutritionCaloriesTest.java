/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.spoonacular.client.model.ImageAnalysisByURL200ResponseNutritionCaloriesConfidenceRange95Percent;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ImageAnalysisByURL200ResponseNutritionCalories
 */
public class ImageAnalysisByURL200ResponseNutritionCaloriesTest {
    private final ImageAnalysisByURL200ResponseNutritionCalories model = new ImageAnalysisByURL200ResponseNutritionCalories();

    /**
     * Model tests for ImageAnalysisByURL200ResponseNutritionCalories
     */
    @Test
    public void testImageAnalysisByURL200ResponseNutritionCalories() {
        // TODO: test ImageAnalysisByURL200ResponseNutritionCalories
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'confidenceRange95Percent'
     */
    @Test
    public void confidenceRange95PercentTest() {
        // TODO: test confidenceRange95Percent
    }

    /**
     * Test the property 'standardDeviation'
     */
    @Test
    public void standardDeviationTest() {
        // TODO: test standardDeviation
    }

}
