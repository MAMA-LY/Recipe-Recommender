/*
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.spoonacular.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GetRecipeTasteByID200Response
 */
public class GetRecipeTasteByID200ResponseTest {
    private final GetRecipeTasteByID200Response model = new GetRecipeTasteByID200Response();

    /**
     * Model tests for GetRecipeTasteByID200Response
     */
    @Test
    public void testGetRecipeTasteByID200Response() {
        // TODO: test GetRecipeTasteByID200Response
    }

    /**
     * Test the property 'sweetness'
     */
    @Test
    public void sweetnessTest() {
        // TODO: test sweetness
    }

    /**
     * Test the property 'saltiness'
     */
    @Test
    public void saltinessTest() {
        // TODO: test saltiness
    }

    /**
     * Test the property 'sourness'
     */
    @Test
    public void sournessTest() {
        // TODO: test sourness
    }

    /**
     * Test the property 'bitterness'
     */
    @Test
    public void bitternessTest() {
        // TODO: test bitterness
    }

    /**
     * Test the property 'savoriness'
     */
    @Test
    public void savorinessTest() {
        // TODO: test savoriness
    }

    /**
     * Test the property 'fattiness'
     */
    @Test
    public void fattinessTest() {
        // TODO: test fattiness
    }

    /**
     * Test the property 'spiciness'
     */
    @Test
    public void spicinessTest() {
        // TODO: test spiciness
    }

}
